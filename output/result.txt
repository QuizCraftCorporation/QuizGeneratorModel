['What are the two main functions of operating systems?', ["Providing abstractions to user programs and managing the computer's resources", 'Creating, writing, reading, and deleting files', "Issuing system calls and managing the computer's resources", 'Providing abstractions to user programs and creating files'], [0]]
['What is the primary interface between user programs and the operating system?', ['Dealing with abstractions', 'Managing computer resources', 'Issuing system calls', 'Writing and deleting files'], [0]]
['What is the difference between vague generalities and a specific system approach when discussing operating systems?', ['The latter approach gives more insight into what operating systems really do', 'The former approach is more work', 'The latter approach is less machine dependent', 'The former approach is more commonly used'], [0]]
['What is the purpose of a procedure library in relation to system calls?', ['To make it possible to make system calls from C programs and often from other languages as well', "To manage the computer's resources", 'To create, write, read, and delete files', 'To provide abstractions to user programs'], [0]]
['What is the purpose of the TRAP instruction in making a system call?', ['To switch into kernel mode and jump to a fixed location or index into a table of jump addresses', 'To save the return address on the stack and switch into kernel mode', 'To give a relative or absolute address where the procedure is located', 'To dispatch to the correct system-call handler'], [0]]
['What is the difference between the TRAP instruction and a procedure call instruction?', ['The TRAP instruction switches into kernel mode and cannot jump to an arbitrary address, while the procedure call instruction does not change the mode and can jump to any address', 'The TRAP instruction saves the return address on the stack and the procedure call instruction does not', 'The TRAP instruction gives a relative or absolute address where the procedure is located, while the procedure call instruction cannot', 'The TRAP instruction and the procedure call instruction are the same'], [0]]
['What does the kernel code do following the TRAP instruction?', ['Examines the system-call number and dispatches to the correct system-call handler', 'Saves the return address on the stack and switches into kernel mode', 'Jumps to a fixed location or index into a table of jump addresses', 'Returns control to the user-space library procedure'], [0]]
['How does the system-call handler run?', ['It runs after the kernel code dispatches to the correct system-call handler', 'It runs before the kernel code dispatches to the correct system-call handler', 'It runs after the user-space library procedure returns', 'It runs before the TRAP instruction'], [0]]
